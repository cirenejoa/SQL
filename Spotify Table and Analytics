-- For this project, I downloaded Spotify data from Kaggle. 
-- I then created the table seen below to insert the Spotify data into before I performed a few analytics on it. 

CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
song_key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
song_mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness decimal(8,7) NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL )

-- Select all columns and rows to get a feel for the data available in the table.

SELECT * FROM BIT_DB.Spotifydata;

-- Determine the speechiness, acousticness, and liveness by artist and track.

SELECT artist_name, track_name, speechiness, acousticness, liveness
FROM BIT_DB.Spotifydata
GROUP BY artist_name, track_name;

-- What are the top 10 tracks by popularity?

SELECT artist_name, track_name, popularity
FROM BIT_DB.Spotifydata
ORDER BY popularity DESC
LIMIT 10;

-- Which song is the shortest?

SELECT artist_name, track_name, duration_ms
FROM  BIT_DB.Spotifydata
ORDER BY duration_ms ASC
LIMIT 1;
